#pragma once

const char sample_vim[] =
    "\33[?1006h\33[?1002h\33[?2004h"
    "\33[?1049h\33[22;0;0t\33[?1h\33=\33[?2004h"
    "\33[?12h\33[?12l\33[27m\33[23m\33[29m\33[m\33[H\33[2J\33[?25l\33[1;3H~"
    "VTParser();"
    "\33[40C\33[7m|\33[2;55H|\33[m\r\n  \33[38;5;121mvoid\33[m parse_input("
    "\33[38;5;121mconst\33[m \33[38;5;121mchar\33[m *input, "
    "\33[38;5;121msize_t\33[m length); "
    "\33[7m|\33[m\r\n  \33[38;5;121mvoid\33[m "
    "parse_input(\33[38;5;121mchar\33[m c);\33[27C\33[7m|"
    "\33[5;55H|\33[m\r\n\33[93mprivate\33[m:\33[46C\33[7m|\33[m\r\n  "
    "\33[38;5;121mvirtual\33[m \33[38;5;121mvoid\33[m on_glyph("
    "\33[38;5;121mconst\33[m \33[38;5;121mchar\33[m *glyph, "
    "\33[38;5;121msize_t\33[m leng\33[7m|\33[m\r\nth);"
    "\33[22C\33[41m \33[m\33[27C\33[7m|\33[m\r\n  \33[38;5;121mvirtual\33[m "
    "\33[38;5;121mvoid\33[m on_newline();\33[26C\33[7m|"
    "\33[m\r\n  \33[38;5;121mvirtual\33[m \33[38;5;121mvoid\33[m "
    "on_return();\33[27C\33[7m|\33[m\r\n  \33[38;5;121mvirtual\33[m "
    "\33[38;5;121mvoid\33[m on_tab();\33[30C\33[7m|\33[m\r\n  "
    "\33[38;5;121mvirtual\33[m \33[38;5;121mvoid\33[m on_bell();\33[29C"
    "\33[7m|\33[m\r\n  \33[38;5;121mvirtual\33[m \33[38;5;121mvoid\33[m "
    "on_backspace();\33[24C\33[7m|\33[m\r\n};\33[52C"
    "\33[7m|\r\nparser.hpp                          34,15          97% "
    "\33[m\33[1;58HMOCK_METHOD0(on_backspace, \33[38;5;121mvoid\33[m("
    "\33[38;5;121mvoid\33[m));\33[2;56H};\33[4;56HTEST(VTParser, Simple) "
    "{\33[5;58HMockVTParser p;\33[6;58H\33[38;5;121mchar"
    "\33[m input[] = \33[95m\"this is some "
    "input\33[m\33[38;5;224m\\n\33[m\33[95m\"\33[m;\33[7;58Hp.parse_input("
    "input, \33[93msizeof"
    "\33[m(input));\33[8;56H}\33[9;56H\33[94m~                                 "
    "              "
    "\33[10;56H~                                               \33[11;56H~     "
    "                                          "
    "\33[12;56H~                                               \33[13;56H~     "
    "                                          "
    "\33[14;56H~                                               "
    "\33[m\33[15;56H\33[1m\33[7mparser.m.cpp                  14,27          "
    "Bot"
    "\33[m\33[16;81H\33[41m \33[m\33[13C\33[7m|\33[m\33[17;7H\33[93mcase\33[m "
    "\33[38;5;224m'\\n'\33[m: on_newline();\33[12C"
    "\33[93mbreak\33[m;\33[32C\33[41m "
    "\33[m\33[13C\33[7m|\33[m\33[18;7H\33[93mcase\33[m "
    "\33[38;5;224m'\\r'\33[m: on_return();"
    "\33[13C\33[93mbreak\33[m;\33[32C\33[41m "
    "\33[m\33[13C\33[7m|\33[m\33[19;7H\33[93mcase\33[m "
    "\33[38;5;224m'\\t'\33[m: on_tab();"
    "\33[16C\33[93mbreak\33[m;\33[32C\33[41m "
    "\33[m\33[13C\33[7m|\33[m\33[20;7H\33[93mcase\33[m "
    "\33[38;5;224m'\\a'\33[m: on_bell();"
    "\33[15C\33[93mbreak\33[m;\33[32C\33[41m "
    "\33[m\33[13C\33[7m|\33[m\33[21;7H\33[93mcase"
    "\33[m \33[38;5;224m'\\b'\33[m: "
    "on_backspace();\33[10C\33[93mbreak\33[m;\33[32C\33[41m \33[m\33[13C"
    "\33[7m|\33[m\33[22;7H\33[93mcase\33[m \33[38;5;224m'\\0'\33[m: \33[96m/* "
    "ignore */\33[m\33[13C\33[93mbreak\33[m;"
    "\33[32C\33[41m \33[m\33[13C\33[7m|\33[m\33[23;81H\33[41m "
    "\33[m\33[13C\33[7m|\33[m\33[24;7H\33[93mdefault\33[m:   on_glyph(&c, "
    "\33[95m1u\33[m);\33[8C\33[93mbreak\33[m;\33[32C\33[41m "
    "\33[m\33[13C\33[7m|\33[m\r\n    }\33[75C\33[41m \33[m\33[13C\33[7m|"
    "\33[m\r\n    \33[93mbreak\33[m;\33[70C\33[41m \33[m\33[13C"
    "\33[7m|\r\nparser.cpp                                                     "
    "             43,29          67% "
    "\33[m\33[17;102Hre\33[18;96Had_chars\33[19;96Het = "
    "\33[95mtru\33[20;96He\33[m;\33[22;100H} \33[93mbr\33[23;96Heak"
    "\33[m;\33[25;100H\33[93mcase\33[m\33[26;97H\33[95m'7'\33[m: "
    "{\33[24;96H\33[94m@       \33[25;96H@       "
    "\33[26;96H@       \33[m\33[27;96H\33[7m<.c 1329\33[1;82H\33[?25h";
